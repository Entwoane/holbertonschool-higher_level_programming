The ``matrix_divided`` function
===============================

Using ``matrix_divided``
------------------------

First, import the function:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now, test with a simple matrix:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Test with floats:
    >>> matrix = [[1.1, -2.2, 3.3], [4.4, 5.5, -6.6]]
    >>> print(matrix_divided(matrix, 3))
    [[0.37, -0.73, 1.1], [1.47, 1.83, -2.2]]

Test with mixed ints and floats:
    >>> matrix = [[1, -2.2, 3, 4.4, 5], [-6.6, 7.00, 8, 9.999, 10]]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, -0.73, 1.0, 1.47, 1.67], [-2.2, 2.33, 2.67, 3.33, 3.33]]

Test division by negative number:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, -3))
    [[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]

Test division by float:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 2.5))
    [[0.4, 0.8, 1.2], [1.6, 2.0, 2.4]]

Test that original matrix is unchanged:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
    >>> print(matrix)
    [[1, 2, 3], [4, 5, 6]]

Test error cases:

Test with non-list matrix:
    >>> matrix_divided("not a matrix", 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test with list containing non-list elements:
    >>> matrix_divided([1, 2, 3], 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test with empty matrix:
    >>> matrix_divided([], 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test with matrix containing non-number:
    >>> matrix_divided([[1, 2, 3], [4, "not a number", 6]], 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test with rows of different sizes:
    >>> matrix_divided([[1, 2, 3], [4, 5]], 3)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

Test with non-number divisor:
    >>> matrix_divided([[1, 2], [3, 4]], "not a number")
    Traceback (most recent call last):
    TypeError: div must be a number

Test division by zero:
    >>> matrix_divided([[1, 2], [3, 4]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

Test with no arguments:
    >>> matrix_divided()
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
