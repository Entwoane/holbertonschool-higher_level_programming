The ``say_my_name`` function
============================

Using ``say_my_name``
---------------------

Import the function:
    >>> say_my_name = __import__('3-say_my_name').say_my_name

Basic usage:
    >>> say_my_name("John", "Smith")
    My name is John Smith

    >>> say_my_name("Walter", "White")
    My name is Walter White

Using only first name:
    >>> say_my_name("Bob")
    My name is Bob 

Empty last name:
    >>> say_my_name("Alice", "")
    My name is Alice 

Empty strings:
    >>> say_my_name("", "")
    My name is  

Edge cases:

Very long names:
    >>> say_my_name("A"*1000, "B"*1000)
    My name is

Names with special characters:
    >>> say_my_name("Jöhn", "Smîth")
    My name is Jöhn Smîth

Names with numbers (as strings):
    >>> say_my_name("John123", "Smith456")
    My name is John123 Smith456

Names with leading/trailing spaces:
    >>> say_my_name("  John  ", "  Smith  ")
    My name is   John     Smith  

Unicode characters:
    >>> say_my_name("😊", "🌍")
    My name is 😊 🌍

Empty first name:
    >>> say_my_name("", "Smith")
    My name is  Smith

Error cases:

Non-string first name:
    >>> say_my_name(12, "White")
    Traceback (most recent call last):
    TypeError: first_name must be a string

Non-string last name:
    >>> say_my_name("Walter", 12)
    Traceback (most recent call last):
    TypeError: last_name must be a string

Both names non-strings:
    >>> say_my_name(12, 12)
    Traceback (most recent call last):
    TypeError: first_name must be a string

Missing arguments:
    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'

None as argument:
    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string
